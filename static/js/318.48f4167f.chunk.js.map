{"version":3,"file":"static/js/318.48f4167f.chunk.js","mappings":"kNAEAA,EAAAA,EAAAA,SAAAA,QAAyB,qDAElB,IAAMC,EAAO,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAENV,EAAAA,EAAAA,IAAU,UAAU,KAAD,SAAAQ,EAAAG,OAAA,SAAAH,EAAAI,MAAA,OAAAJ,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,iCAAAA,EAAAM,OAAA,GAAAR,EAAA,kBAEnC,kBAJmB,OAAAJ,EAAAa,MAAA,KAAAC,UAAA,K,yBCDPC,EAAO,SAAHf,GAAuD,IAADgB,EAAAhB,EAAhDiB,KAAQC,EAAIF,EAAJE,KAAMC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAASL,EAATK,UACnDC,GAA4BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAElBI,EAAe,WACnBD,GAAWD,EACb,EAEA,OACEG,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,IAAKZ,EAAQa,IAAKf,KACvBW,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAIX,EAAO,cACXU,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAII,OAAOb,GAAWc,eAAe,SAAS,gBAE7CT,GACCK,EAAAA,EAAAA,KAAA,UAAQK,KAAK,SAASC,QAAST,EAAaE,SAAC,eAI7CC,EAAAA,EAAAA,KAAA,UAAQM,QAAST,EAAaE,SAAC,aAIvC,EAEAf,EAAKuB,SAAW,CACdrB,KAAMsB,IAAAA,MAAgB,CACpBrB,KAAMqB,IAAAA,OAAAA,WACNpB,OAAQoB,IAAAA,OAAAA,WACRnB,OAAQmB,IAAAA,OAAAA,WACRlB,UAAWkB,IAAAA,OAAAA,aACVC,YC7BE,IAAMC,EAAW,WACtB,IAAAnB,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCoB,EAAQlB,EAAA,GAAEmB,EAAWnB,EAAA,GAC5BoB,GAA0BrB,EAAAA,EAAAA,UAAS,MAAKsB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAQtB,OANAG,EAAAA,EAAAA,YAAU,WACRjD,IACGkD,MAAK,SAAAjD,GAAA,IAAGkD,EAAIlD,EAAJkD,KAAI,OAAOP,EAAYO,EAAK,IACpCC,OAAM,SAACL,GAAK,OAAKC,EAASD,EAAM,GACrC,GAAG,KAGDjB,EAAAA,EAAAA,MAAAuB,EAAAA,SAAA,CAAAtB,SAAA,CACGgB,IAASf,EAAAA,EAAAA,KAAA,KAAAD,SAAIgB,EAAMO,WACpBtB,EAAAA,EAAAA,KAAA,MAAAD,SACGY,EAASY,KAAI,SAACrC,GAAI,OACjBc,EAAAA,EAAAA,KAAChB,EAAI,CAAeE,KAAMA,GAAfA,EAAKsC,GAAkB,QAK5C,EClBA,MAJA,WACE,OAAOxB,EAAAA,EAAAA,KAACU,EAAQ,GAClB,C","sources":["components/services/fetchUser.js","components/Card/Card.jsx","components/CardList/CardList.jsx","pages/Tweets.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://64455cc4914c816083cd1353.mockapi.io/tweets\";\n\nexport const getUser = async () => {\n  try {\n    return await axios.get(\"/users\");\n  } catch (error) {}\n};\n","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\n\nexport const Card = ({ user: { name, tweets, avatar, followers } }) => {\n  const [follow, setFollow] = useState(false);\n\n  const toggleFollow = () => {\n    setFollow(!follow);\n  };\n\n  return (\n    <li>\n      <img src={avatar} alt={name} />\n      <p>{tweets} tweets</p>\n      <p>{Number(followers).toLocaleString(\"en-US\")} followers</p>\n\n      {follow ? (\n        <button type=\"button\" onClick={toggleFollow}>\n          Following\n        </button>\n      ) : (\n        <button onClick={toggleFollow}>Follow</button>\n      )}\n    </li>\n  );\n};\n\nCard.PropType = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    tweets: PropTypes.number.isRequired,\n    avatar: PropTypes.string.isRequired,\n    followers: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { useState, useEffect } from \"react\";\nimport { getUser } from \"../services/fetchUser\";\nimport { Card } from \"../Card/Card\";\n\nexport const CardList = () => {\n  const [userList, setUserList] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getUser()\n      .then(({ data }) => setUserList(data))\n      .catch((error) => setError(error));\n  }, []);\n\n  return (\n    <>\n      {error && <p>{error.message}</p>}\n      <ul>\n        {userList.map((user) => (\n          <Card key={user.id} user={user} />\n        ))}\n      </ul>\n    </>\n  );\n};\n","import { CardList } from \"../components/CardList/CardList\";\n\nfunction Tweets() {\n  return <CardList />;\n}\n\nexport default Tweets;\n"],"names":["axios","getUser","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","sent","t0","stop","apply","arguments","Card","_ref$user","user","name","tweets","avatar","followers","_useState","useState","_useState2","_slicedToArray","follow","setFollow","toggleFollow","_jsxs","children","_jsx","src","alt","Number","toLocaleString","type","onClick","PropType","PropTypes","isRequired","CardList","userList","setUserList","_useState3","_useState4","error","setError","useEffect","then","data","catch","_Fragment","message","map","id"],"sourceRoot":""}