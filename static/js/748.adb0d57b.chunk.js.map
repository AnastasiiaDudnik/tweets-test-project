{"version":3,"file":"static/js/748.adb0d57b.chunk.js","mappings":"kNAEAA,EAAAA,EAAAA,SAAAA,QAAyB,qDAElB,IAAMC,EAAO,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAENV,EAAAA,EAAAA,IAAU,UAAU,KAAD,SAAAQ,EAAAG,OAAA,SAAAH,EAAAI,MAAA,OAAAJ,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,iCAAAA,EAAAM,OAAA,GAAAR,EAAA,kBAEnC,kBAJmB,OAAAJ,EAAAa,MAAA,KAAAC,UAAA,K,yBCJPC,EAAe,SAAHf,GAAqB,IAAfgB,EAAOhB,EAAPgB,QAC7B,OACEC,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASF,QAASA,EAAQG,SAAC,UAI5C,ECNaC,EAAkB,SAAHpB,GAAqB,IAAfgB,EAAOhB,EAAPgB,QAChC,OACEC,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASF,QAASA,EAAQG,SAAC,aAI5C,ECDaE,EAAO,SAAHrB,GAAuD,IAADsB,EAAAtB,EAAhDuB,KAAQC,EAAIF,EAAJE,KAAMC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAASL,EAATK,UACnDC,GAA4BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAElBI,EAAe,WACnBD,GAAWD,EACb,EAEA,OACEG,EAAAA,EAAAA,MAAA,MAAAhB,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKmB,IAAKV,EAAQW,IAAKb,KACvBW,EAAAA,EAAAA,MAAA,KAAAhB,SAAA,CAAIM,EAAO,cACXU,EAAAA,EAAAA,MAAA,KAAAhB,SAAA,CAAImB,OAAOX,GAAWY,eAAe,SAAS,gBAE7CP,GACCf,EAAAA,EAAAA,KAACG,EAAe,CAACJ,QAASkB,KAE1BjB,EAAAA,EAAAA,KAACF,EAAY,CAACC,QAASkB,MAI/B,EAEAb,EAAKmB,SAAW,CACdjB,KAAMkB,IAAAA,MAAgB,CACpBjB,KAAMiB,IAAAA,OAAAA,WACNhB,OAAQgB,IAAAA,OAAAA,WACRf,OAAQe,IAAAA,OAAAA,WACRd,UAAWc,IAAAA,OAAAA,aACVC,YC7BE,IAAMC,EAAW,WACtB,IAAAf,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCgB,EAAQd,EAAA,GAAEe,EAAWf,EAAA,GAC5BgB,GAA0BjB,EAAAA,EAAAA,UAAS,MAAKkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAQtB,OANAG,EAAAA,EAAAA,YAAU,WACRnD,IACGoD,MAAK,SAAAnD,GAAA,IAAGoD,EAAIpD,EAAJoD,KAAI,OAAOP,EAAYO,EAAK,IACpCC,OAAM,SAACL,GAAK,OAAKC,EAASD,EAAM,GACrC,GAAG,KAGDb,EAAAA,EAAAA,MAAAmB,EAAAA,SAAA,CAAAnC,SAAA,CACG6B,IAAS/B,EAAAA,EAAAA,KAAA,KAAAE,SAAI6B,EAAMO,WACpBtC,EAAAA,EAAAA,KAAA,MAAAE,SACGyB,EAASY,KAAI,SAACjC,GAAI,OACjBN,EAAAA,EAAAA,KAACI,EAAI,CAAeE,KAAMA,GAAfA,EAAKkC,GAAkB,QAK5C,EClBA,MAJA,WACE,OAAOxC,EAAAA,EAAAA,KAAC0B,EAAQ,GAClB,C","sources":["components/services/fetchUser.js","components/FollowButton/FollowButton.jsx","components/FollowingButton/FollowingButton.jsx","components/Card/Card.jsx","components/CardList/CardList.jsx","pages/Tweets.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://64455cc4914c816083cd1353.mockapi.io/tweets\";\n\nexport const getUser = async () => {\n  try {\n    return await axios.get(\"/users\");\n  } catch (error) {}\n};\n","export const FollowButton = ({ onClick }) => {\n  return (\n    <button type=\"button\" onClick={onClick}>\n      Follow\n    </button>\n  );\n};\n","export const FollowingButton = ({ onClick }) => {\n  return (\n    <button type=\"button\" onClick={onClick}>\n      Following\n    </button>\n  );\n};\n","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { FollowButton } from \"../FollowButton/FollowButton\";\nimport { FollowingButton } from \"../FollowingButton/FollowingButton\";\n\nexport const Card = ({ user: { name, tweets, avatar, followers } }) => {\n  const [follow, setFollow] = useState(false);\n\n  const toggleFollow = () => {\n    setFollow(!follow);\n  };\n\n  return (\n    <li>\n      <img src={avatar} alt={name} />\n      <p>{tweets} tweets</p>\n      <p>{Number(followers).toLocaleString(\"en-US\")} followers</p>\n\n      {follow ? (\n        <FollowingButton onClick={toggleFollow} />\n      ) : (\n        <FollowButton onClick={toggleFollow} />\n      )}\n    </li>\n  );\n};\n\nCard.PropType = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    tweets: PropTypes.number.isRequired,\n    avatar: PropTypes.string.isRequired,\n    followers: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { useState, useEffect } from \"react\";\nimport { getUser } from \"../services/fetchUser\";\nimport { Card } from \"../Card/Card\";\n\nexport const CardList = () => {\n  const [userList, setUserList] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getUser()\n      .then(({ data }) => setUserList(data))\n      .catch((error) => setError(error));\n  }, []);\n\n  return (\n    <>\n      {error && <p>{error.message}</p>}\n      <ul>\n        {userList.map((user) => (\n          <Card key={user.id} user={user} />\n        ))}\n      </ul>\n    </>\n  );\n};\n","import { CardList } from \"../components/CardList/CardList\";\n\nfunction Tweets() {\n  return <CardList />;\n}\n\nexport default Tweets;\n"],"names":["axios","getUser","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","sent","t0","stop","apply","arguments","FollowButton","onClick","_jsx","type","children","FollowingButton","Card","_ref$user","user","name","tweets","avatar","followers","_useState","useState","_useState2","_slicedToArray","follow","setFollow","toggleFollow","_jsxs","src","alt","Number","toLocaleString","PropType","PropTypes","isRequired","CardList","userList","setUserList","_useState3","_useState4","error","setError","useEffect","then","data","catch","_Fragment","message","map","id"],"sourceRoot":""}